# First remove *all* keybindings
# unbind-key -a
# Now reinsert all the regular tmux keys

# tmux will still save the binding unless unbinding it like below
# unbind-key -n C-m
# bind-key -n C-m send-key C-m

bind ^X lock-server
bind ^C new-window -c "$HOME"
bind ^D detach
bind * list-clients

bind -n C-p previous-window
bind -n C-n next-window

# this is to make ctrl+tab work in tmux x ghostty (need to have the csi added)
set -s user-keys[4] "\e[2;5I"  # Ctrl+Tab
set -s user-keys[5] "\e[2;6I"  # Ctrl+Shift+Tab
bind -n User4 next-window
bind -n User5 previous-window

bind n new-window
bind q killw
bind '#' display-panes 

bind r command-prompt "rename-window %%"
bind R source-file ~/.config/tmux/tmux.conf \; display-message "Tmux config reloaded!"
bind ^A last-window
bind ^W list-windows
bind z resize-pane -Z
bind ^L refresh-client
bind l refresh-client
bind | split-window
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind '"' choose-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r -T prefix , resize-pane -L 20
bind -r -T prefix . resize-pane -R 20
bind -r -T prefix - resize-pane -D 7
bind -r -T prefix = resize-pane -U 7
bind : command-prompt
bind * setw synchronize-panes
bind P set pane-border-status
bind c kill-pane
bind x swap-pane -D
bind S choose-session
bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -n C-q display-popup -w "90%" -h "85%" -E nvim -c ":ObsidianSearch"
# set -g visual-activity off

bind -T copy-mode-vi n send -X next-prompt
bind -T copy-mode-vi p send -X previous-prompt

# set -g mode-indicator none

# # Optional: cycle older outputs in copy-mode (when you're already in copy-mode)
# bind -T copy-mode-vi M-. send-keys -X next-prompt -o
# bind -T copy-mode-vi M-, send-keys -X previous-prompt -o

# copy last output to clipboard.
# weakness. two or more line commands will not work.
# it will the second line or more commands as output.
# this also needs very specific shell prompt, in this case i use custom fish prompt.
bind c { 
  copy-mode
  send -X clear-selection
  send -X start-of-line
  send -X cursor-up
  send -X cursor-up  # Move up one more line to skip the prompt
  send -X cursor-up  # Move up one more line to skip the empty spacing
  send -X start-of-line

  if -F "#{m:*>\u00A0*,#{copy_cursor_line}}" {
    send -X search-forward-text "❱ "
    send -X stop-selection
    send -X -N 2 cursor-right
    send -X begin-selection
    send -X end-of-line
    if "#{m:*>\u00A0?*,#{copy_cursor_line}}" {
      send -X cursor-left
    }
  } {
    send -X end-of-line
    send -X begin-selection
    send -X search-backward-text "❱ "
    # send -X search-backward-text "> "
    send -X end-of-line
    send -X cursor-right
    send -X stop-selection
  }

  # finally copy into wl-clipboard
  send -X copy-pipe-and-cancel "wl-copy"
}
