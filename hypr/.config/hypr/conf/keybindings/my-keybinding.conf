# █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# ==================== KEYBINDING CONVENTIONS ====================
# SUPER (Windows key) - Main window management
# ALT - Workspace navigation and app switching
# CTRL - Reserved for in-app shortcuts if used alone. otherwise, can be used with other modifiers. ex. SUPER + CTRL + K
# SHIFT - Modifier for alternate actions

# ==================== TIPS TO ADD NEW KEYBINDING ====================
# search the existing keybdingins
# create new binding at the below VARIABLES section
# create new binding and use this to test first:
# bindd = $mainMod, X, Test binding, exec, notify-send "Test" "this is just a test to show the keybinding is working" -t 2000

# ==================== VARIABLES ====================
$mainMod = SUPER
$HYPRSCRIPTS = ~/.config/hypr/scripts
$SCRIPTS = ~/.config/ml4w/scripts

# Vim movement keys
$vimRight = L
$vimLeft = H
$vimUp = K
$vimDown = J

# Terminal
# $term = kitty
$term = ghostty --gtk-single-instance=true

# ==================== NOTIFICATION ====================
bindd = $mainMod ALT CTRL, R, Hide latest notification, exec, swaync-client --hide-latest
bindd = $mainMod ALT CTRL, N, Hide latest notification, exec, swaync-client -t

# ==================== APPLICATIONS ====================
bindd = $mainMod, T, Launch terminal, exec, $term
bindd = $mainMod, B, Launch browser, exec, ~/.config/ml4w/settings/browser.sh
bindd = $mainMod, E, Open file manager, exec, ~/.config/ml4w/settings/filemanager.sh
bindd = $mainMod CTRL, E, Show emoji picker, exec, ~/.config/ml4w/settings/emojipicker.sh
bindd = $mainMod CTRL, C, Open calculator, exec, ~/.config/ml4w/settings/calculator.sh
bindd = ALT, Space, Application launcher, exec, pkill rofi || rofi -show drun -replace -i
bindd = ALT, F, Toggle fullscreen, togglefloating

# ==================== WINDOW MANAGEMENT ====================
bindd = $mainMod, Q, Close window, killactive
bindd = $mainMod SHIFT, Q, Quit application, exec, hyprctl activewindow | grep pid | tr -d 'pid:' | xargs kill
bindd = $mainMod, F, Toggle fullscreen, fullscreen, 0
bindd = $mainMod, M, Maximize window, fullscreen, 1
bindd = $mainMod SHIFT, T, Float all windows, workspaceopt, allfloat
bindd = ALT, S, Toggle split, togglesplit # changing the window orientation of vertical or horizontal
# bindd = $mainMod, G, Toggle group, togglegroup # disable this as G is used
# bindd = $mainMod, K, Swap split, swapsplit
bindd = ALT, Tab, Cycle Next Window, cyclenext

# Window movement with mouse
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# ==================== SCREENSHOTS ====================
bindd = , Print, Copy screen to clipboard, exec, grim - | wl-copy && notify-send "Screenshot" "Full screen copied to clipboard!" -t 2000
bindd = $mainMod, Print, Copy active window, exec, grim -g "$(hyprctl activewindow -j | jq -r '"\(.at[0]),\(.at[1]) \(.size[0])x\(.size[1])"')" - | wl-copy && notify-send "Screenshot" "Active window copied to clipboard!" -t 2000
bindd = $mainMod, P, Copy selected area, exec, grim -g "$(slurp)" - | wl-copy && notify-send "Screenshot" "Region copied to clipboard!" -t 2000

# ==================== SYSTEM ====================
bindd = $mainMod CTRL, R, Reload Hyprland, exec, hyprctl reload
bindd = $mainMod, BACKSPACE, Session menu, exec, ~/.config/ml4w/scripts/wlogout.sh
bindd = $mainMod SHIFT, W, Random wallpaper, exec, waypaper --random
bindd = $mainMod CTRL SHIFT, W, Wallpaper selector, exec, waypaper
# enable it after changing the sript.
# bindd = $mainMod ALT, W, Start wallpaper automation, exec, $HYPRSCRIPTS/wallpaper-automation.sh
bindd = $mainMod ALT CTRL SHIFT, K, Show keybindings, exec, ~/.config/hypr/scripts/my-keybindings.sh
bindd = $mainMod SHIFT, B, Reload Waybar, exec, ~/.config/waybar/launch.sh
bindd = $mainMod CTRL, B, Toggle Waybar, exec, ~/.config/waybar/toggle.sh
bindd = $mainMod, V, Clipboard manager, exec, $SCRIPTS/cliphist.sh

# ==================== WORKSPACES ====================
# Workspace switching
# bindd = $mainMod, 1, Workspace 1, workspace, 1
# bindd = $mainMod, 2, Workspace 2, workspace, 2
# bindd = $mainMod, 3, Workspace 3, workspace, 3
# bindd = $mainMod, 4, Workspace 4, workspace, 4
# bindd = $mainMod, 5, Workspace 5, workspace, 5
# bindd = $mainMod, 6, Workspace 6, workspace, 6
# bindd = $mainMod, 7, Workspace 7, workspace, 7
# bindd = $mainMod, 8, Workspace 8, workspace, 8
# bindd = $mainMod, 9, Workspace 9, workspace, 9
# bindd = $mainMod, 0, Workspace 10, workspace, 10
bindd = $mainMod, 1, Workspace 1, exec, ~/.config/hypr/scripts/toggle-workspace.sh 1
bindd = $mainMod, 2, Workspace 2, exec, ~/.config/hypr/scripts/toggle-workspace.sh 2
bindd = $mainMod, 3, Workspace 3, exec, ~/.config/hypr/scripts/toggle-workspace.sh 3
bindd = $mainMod, 4, Workspace 4, exec, ~/.config/hypr/scripts/toggle-workspace.sh 4
bindd = $mainMod, 5, Workspace 5, exec, ~/.config/hypr/scripts/toggle-workspace.sh 5
bindd = $mainMod, 6, Workspace 6, exec, ~/.config/hypr/scripts/toggle-workspace.sh 6
bindd = $mainMod, 7, Workspace 7, exec, ~/.config/hypr/scripts/toggle-workspace.sh 7
bindd = $mainMod, 8, Workspace 8, exec, ~/.config/hypr/scripts/toggle-workspace.sh 8
bindd = $mainMod, 9, Workspace 9, exec, ~/.config/hypr/scripts/toggle-workspace.sh 9
bindd = $mainMod, 0, Workspace 10, exec, ~/.config/hypr/scripts/toggle-workspace.sh 10

# Window movement between workspaces
bindd = $mainMod SHIFT, 1, Move to workspace 1, movetoworkspace, 1
bindd = $mainMod SHIFT, 2, Move to workspace 2, movetoworkspace, 2
bindd = $mainMod SHIFT, 3, Move to workspace 3, movetoworkspace, 3
bindd = $mainMod SHIFT, 4, Move to workspace 4, movetoworkspace, 4
bindd = $mainMod SHIFT, 5, Move to workspace 5, movetoworkspace, 5
bindd = $mainMod SHIFT, 6, Move to workspace 6, movetoworkspace, 6
bindd = $mainMod SHIFT, 7, Move to workspace 7, movetoworkspace, 7
bindd = $mainMod SHIFT, 8, Move to workspace 8, movetoworkspace, 8
bindd = $mainMod SHIFT, 9, Move to workspace 9, movetoworkspace, 9
bindd = $mainMod SHIFT, 0, Move to workspace 10, movetoworkspace, 10

# Workspace navigation
bindd = $mainMod ALT, Tab, Next workspace, workspace, m+1
bindd = $mainMod ALT SHIFT, Tab, Previous workspace, workspace, m-1
bindd = $mainMod, mouse_down, Next workspace, workspace, e+1

# bindd = $mainMod, $vimRight, Next workspace (vim), workspace, r+1
# bindd = $mainMod, $vimLeft, Previous workspace (vim), workspace, r-1
# bindd = $mainMod, $vimDown, Open Empty Workspace, workspace, empty
bindd = $mainMod, $vimRight, Next workspace, exec, ~/.config/hypr/scripts/toggle-workspace.sh right
bindd = $mainMod, $vimLeft, Previous workspace, exec, ~/.config/hypr/scripts/toggle-workspace.sh left
bindd = $mainMod, $vimDown, Open Empty Workspace, exec, ~/.config/hypr/scripts/toggle-workspace.sh down
bindd = $mainMod, Tab, Go back and forth to previous workspace, workspace, previous # must enable this allow_workspace_cycles

# ==================== VIM-STYLE MOVEMENT ====================
# Window focus
bindd = ALT, $vimRight, Focus right, movefocus, r
bindd = ALT, $vimLeft, Focus left, movefocus, l
bindd = ALT, $vimUp, Focus up, movefocus, u
bindd = ALT, $vimDown, Focus down, movefocus, d

# Window movement between workspaces (vim)
bindd = ALT SHIFT, $vimRight, Move window right, movetoworkspace, r+1
bindd = ALT SHIFT, $vimLeft, Move window left, movetoworkspace, r-1

# Window movement (vim)
bindd = $mainMod SHIFT CTRL, $vimLeft, Move window left, movewindow, l
bindd = $mainMod SHIFT CTRL, $vimRight, Move window right, movewindow, r
bindd = $mainMod SHIFT CTRL, $vimUp, Move window up, movewindow, u
bindd = $mainMod SHIFT CTRL, $vimDown, Move window down, movewindow, d

# Window resizing (vim)
$resizeAmount = 50
bindd = $mainMod ALT SHIFT, $vimRight, Resize right, resizeactive, $resizeAmount 0
bindd = $mainMod ALT SHIFT, $vimLeft, Resize left, resizeactive, -$resizeAmount 0
bindd = $mainMod ALT SHIFT, $vimUp, Resize up, resizeactive, 0 -$resizeAmount
bindd = $mainMod ALT SHIFT, $vimDown, Resize down, resizeactive, 0 $resizeAmount

# ==================== FUNCTION KEYS ====================
bindd = , XF86MonBrightnessUp, Increase brightness, exec, brightnessctl -q s +10%
bindd = , XF86MonBrightnessDown, Decrease brightness, exec, brightnessctl -q s 10%-
bindd = , XF86AudioRaiseVolume, Increase volume, exec, pactl set-sink-volume @DEFAULT_SINK@ +5%
bindd = , XF86AudioLowerVolume, Decrease volume, exec, pactl set-sink-volume @DEFAULT_SINK@ -5%
bindd = , XF86AudioMute, Toggle mute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindd = , XF86AudioPlay, Play/pause, exec, playerctl play-pause
bindd = , XF86AudioNext, Next track, exec, playerctl next
bindd = , XF86AudioPrev, Previous track, exec, playerctl previous
bindd = , XF86AudioMicMute, Toggle microphone, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindd = , XF86Lock, Lock screen, exec, hyprlock

# special workspaces
# quick-note like nvim scratchpad but in hyprland special workspace
bindd = $mainMod, N, Toggle Quick-note Workspace (create Neovide if needed), exec, ~/.config/hypr/scripts/toggle-special-workspace.sh "neovide --wayland_app_id nv-note ~/jho-notes/quick-note.md" "nv-note" "quick-note"
exec-once = neovide --wayland_app_id nv-note ~/jho-notes/quick-note.md
windowrulev2 = workspace special:quick-note silent, class:^(nv-note)$

# ghostty with different class for pop-up terminal (no tmux)
bindd = $mainMod, I, Toggle pop-up terminal, exec, ~/.config/hypr/scripts/toggle-special-workspace.sh "ghostty --class=g.s" "g.s" "term"
exec-once = ghostty --class=g.s
windowrulev2 = workspace special:term silent, class:^(g.s)$

# ghostty terminal for taskwarrior-tui
bindd = $mainMod, Space, Toggle pop-up terminal, exec, ~/.config/hypr/scripts/toggle-special-workspace.sh "ghostty --class=g.t -e taskwarrior-tui" "g.t" "tt"
exec-once = ghostty --class=g.t -e taskwarrior-tui
windowrulev2 = workspace special:tt silent, class:^(g.t)$

# TODO: create new bind for 'enter' 'u' 'o' and 'y' and ';'
# create more spc workspace for firefox ai. make sure when click the ai simpbol in ml4w waybar it will open the app in workspace.

# FIX: move this to other conf?
misc {
  # ex. go to browser when an app needs to open a link.
  # focus_on_activate = true # already active in ml4w custom config
}

# Cursor submap (similar to the Mouse mode in Sway)
submap=cursor

# Jump cursor to a position
bind= ,a,exec,hyprctl dispatch submap reset && wl-kbptr && hyprctl dispatch submap cursor

# Cursor movement
# binde=,j,exec,wlrctl pointer move 0 10
# binde=,k,exec,wlrctl pointer move 0 -10
# binde=,l,exec,wlrctl pointer move 10 0
# binde=,h,exec,wlrctl pointer move -10 0

binde= ,j,exec,wlrctl pointer move 0 20
binde= ,k,exec,wlrctl pointer move 0 -20
binde= ,l,exec,wlrctl pointer move 20 0
binde= ,h,exec,wlrctl pointer move -20 0

# Cursor movement
binde=Shift,j,exec,wlrctl pointer move 0 100
binde=Shift,k,exec,wlrctl pointer move 0 -100
binde=Shift,l,exec,wlrctl pointer move 100 0
binde=Shift,h,exec,wlrctl pointer move -100 0

# Left button
bind= ,s,exec,wlrctl pointer click left
# Middle button
bind= ,d,exec,wlrctl pointer click middle
# Right button +list-actions
bind= ,f,exec,wlrctl pointer click right

# Scroll up and down
binde= ,e,exec,wlrctl pointer scroll 10 0
binde= ,r,exec,wlrctl pointer scroll -10 0

# Scroll left and right
binde= ,t,exec,wlrctl pointer scroll 0 -10
binde= ,g,exec,wlrctl pointer scroll 0 10

# Exit cursor submap
# If you do not use cursor timeout or cursor:hide_on_key_press, you can delete its respective cals
bind= ,escape,exec,hyprctl keyword cursor:inactive_timeout 3; hyprctl keyword cursor:hide_on_key_press true; hyprctl dispatch submap reset 

submap = reset

# Entrypoint
# If you do not use cursor timeout or cursor:hide_on_key_press, you can delete its respective cals
bindd = $mainMod SHIFT, G, Go into mouse mode, exec, hyprctl keyword cursor:inactive_timeout 0; hyprctl keyword cursor:hide_on_key_press false; hyprctl dispatch submap cursor
bindd = $mainMod , G, Spawn cursor, exec, hyprctl dispatch submap reset && wl-kbptr && hyprctl dispatch submap cursor


# FIX: move to window rules config?

# latest hyprland wants this
windowrulev2 = workspace 1, class:^(firefox)$
windowrulev2 = workspace 3, class:^(neovide)$
windowrulev2 = workspace 4, class:^(obsidian)$
windowrulev2 = workspace 2, class:^(wezterm)$
windowrulev2 = workspace 2, class:^(kitty)$
windowrulev2 = workspace 2, class:^(com.mitchellh.ghostty)$
windowrulev2 = opacity 0.92 0.92,class:^(com.mitchellh.ghostty)$

exec-once = ~/.config/ml4w/settings/browser.sh

# why there are two? the first one is to make ghostty to not super slow when spawn new app again. second is to open it and run tmux.
exec-once = ghostty --gtk-single-instance=true --quit-after-last-window-closed=false --initial-window=false
exec-once = ghostty --gtk-single-instance=true -e tmux new-session -s work


general {
  # make the new window to spawn on the right side of the screen and become smaller if added more. 
  # the current window is the master and the smaller ones are slave
  layout = master 
}

 # FIX: . move to layout? create new layout file?
binds {
  # this is to make hyprland to not go to previous workspace when repeat change workspace.
  workspace_back_and_forth = false
  allow_workspace_cycles = true
  pass_mouse_when_bound = false
}

# FIX: old, remove it later

# # █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# # █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# # SUPER KEY
# $mainMod = SUPER
# $HYPRSCRIPTS = ~/.config/hypr/scripts
# $SCRIPTS = ~/.config/ml4w/scripts

# # vim variables
# $vimRight = L
# $vimLeft = H
# $vimUp = K
# $vimDown = J

# # TODO: ctrl + hjkl will be changed to ctrl + shift + hjkl. need to check again
# # this is done to make sure ctrl + any keys can be used in an app.
# # ctrl + shift + hjkl or other binding will be used for changing app inside workspace or others.
# # this is done to make 


# # $term = ghostty
# $term = ghostty --gtk-single-instance=true
# exec-once = ghostty --gtk-single-instance=true --quit-after-last-window-closed=false --initial-window=false

# # grim - | wl-copy

# # Applications
# bind = $mainMod, T, exec, $term    # Open the terminal

# # ~/.config/ml4w/settings/browser.sh this file is mantain by ml4w stow, so just use var instead if the application is changed

# # Applications
# # bind = $mainMod, T, exec, ~/.config/ml4w/settings/terminal.sh    # Open the terminal
# bind = $mainMod, B, exec, ~/.config/ml4w/settings/browser.sh          # Open the browser
# bind = $mainMod, E, exec, ~/.config/ml4w/settings/filemanager.sh      # Open the filemanager
# bind = $mainMod CTRL, E, exec, ~/.config/ml4w/settings/emojipicker.sh # Open the emoji picker
# bind = $mainMod CTRL, C, exec, ~/.config/ml4w/settings/calculator.sh  # Open the calculator

# # Windows
# bind = $mainMod, Q, killactive                                                              # Kill active window
# bind = $mainMod SHIFT, Q, exec, hyprctl activewindow | grep pid | tr -d 'pid:' | xargs kill # Quit active window and all open instances
# bind = $mainMod, F, fullscreen, 0                                                           # Set active window to fullscreen
# bind = $mainMod, M, fullscreen, 1                                                           # Maximize Window
# bind = $mainMod SHIFT, T, workspaceopt, allfloat                                            # Toggle all windows into floating mode
# bind = $mainMod, J, togglesplit                                                             # Toggle split
# bind = $mainMod, left, movefocus, l                                                         # Move focus left
# bind = $mainMod, right, movefocus, r                                                        # Move focus right
# bind = $mainMod, up, movefocus, u                                                           # Move focus up
# bind = $mainMod, down, movefocus, d                                                         # Move focus down
# bindm = $mainMod, mouse:272, movewindow                                                     # Move window with the mouse
# bindm = $mainMod, mouse:273, resizewindow                                                   # Resize window with the mouse
# bind = $mainMod SHIFT, right, resizeactive, 100 0                                           # Increase window width with keyboard
# bind = $mainMod SHIFT, left, resizeactive, -100 0                                           # Reduce window width with keyboard
# bind = $mainMod SHIFT, down, resizeactive, 0 100                                            # Increase window height with keyboard
# bind = $mainMod SHIFT, up, resizeactive, 0 -100                                             # Reduce window height with keyboard
# bind = $mainMod, G, togglegroup                                                             # Toggle window group
# bind = $mainMod, K, swapsplit                                                               # Swapsplit
# bind = $mainMod ALT, left, swapwindow, l                                                    # Swap tiled window left
# bind = $mainMod ALT, right, swapwindow, r                                                   # Swap tiled window right
# bind = $mainMod ALT, up, swapwindow, u                                                      # Swap tiled window up
# bind = $mainMod ALT, down, swapwindow, d                                                    # Swap tiled window down
# binde = ALT,Tab,cyclenext                                                                   # Cycle between windows
# binde = ALT,Tab,bringactivetotop                                                            # Bring active window to the top

# # bind = $mainMod, BACKSPACE,  exec, ~/.config/ml4w/scripts/wlogout.sh, (Open wlogout)
# bindd = $mainMod, BACKSPACE, Open wlogout, exec, ~/.config/ml4w/scripts/wlogout.sh
# # bind = $mainMod, BACKSPACE, exec, ~/.config/ml4w/scripts/wlogout.sh, comment:"Open wlogout"

# # Actions
# bind = $mainMod CTRL, R, exec, hyprctl reload                                             # Reload Hyprland configuration
# bind = $mainMod SHIFT, A, exec, $HYPRSCRIPTS/toggle-animations.sh                         # Toggle animations

# # bind = $mainMod, PRINT, exec, $HYPRSCRIPTS/screenshot.sh                                  # Take a screenshot
# # bind = $mainMod SHIFT, S, exec, $HYPRSCRIPTS/screenshot.sh                                # Take a screenshot

# # Copy entire screen to clipboard
# bind = , Print, exec, grim - | wl-copy && notify-send "Screenshot" "Full screen copied to clipboard!" -t 2000

# # Copy active window to clipboard
# bind = $mainMod, Print, exec, grim -g "$(hyprctl activewindow -j | jq -r '"\(.at[0]),\(.at[1]) \(.size[0])x\(.size[1])"')" - | wl-copy && notify-send "Screenshot" "Active window copied to clipboard!" -t 2000

# # Select area and copy to clipboard (grim + slurp)
# bind = $mainMod SHIFT, P, exec, grim - | wl-copy && notify-send "Screenshot" "Full screen copied to clipboard!" -t 2000
# bind = $mainMod , P, exec, grim -g "$(slurp)" - | wl-copy && notify-send "Screenshot" "Region copied to clipboard!" -t 2000

# # bind = $mainMod CTRL, Q, exec, ~/.config/ml4w/scripts/wlogout.sh                          # Start wlogout # DEL: . DELETE LINES LATER
# bind = $mainMod SHIFT, W, exec, waypaper --random                                         # Change the wallpaper
# bind = $mainMod CTRL, W, exec, waypaper                                                   # Open wallpaper selector
# bind = $mainMod ALT, W, exec, $HYPRSCRIPTS/wallpaper-automation.sh                        # Start random wallpaper script

# bindd = $mainMod ALT CTRL, K, Show keybindings, exec, ~/keybindings.sh                                
# # bind = $mainMod CTRL, K, exec, $HYPRSCRIPTS/keybindings.sh                                # Show keybindings # DEL: . DELETE LINES LATER

# bind = $mainMod SHIFT, B, exec, ~/.config/waybar/launch.sh                                # Reload waybar
# bind = $mainMod CTRL, B, exec, ~/.config/waybar/toggle.sh                                 # Toggle waybar
# bind = $mainMod SHIFT, R, exec, $HYPRSCRIPTS/loadconfig.sh                                # Reload hyprland config
# bind = $mainMod, V, exec, $SCRIPTS/cliphist.sh                                            # Open clipboard manager
# bind = $mainMod CTRL, T, exec, ~/.config/waybar/themeswitcher.sh                          # Open waybar theme switcher
# bind = $mainMod CTRL, S, exec, flatpak run com.ml4w.settings                              # Open ML4W Dotfiles Settings app
# bind = $mainMod SHIFT, H, exec, $HYPRSCRIPTS/hyprshade.sh                                 # Toggle screenshader
# bind = $mainMod ALT, G, exec, $HYPRSCRIPTS/gamemode.sh                                    # Toggle game mode
# bind = $mainMod CTRL, L, exec, ~/.config/hypr/scripts/power.sh lock                       # Start wlogout
# bind = ALT, Space, exec, pkill rofi || rofi -show drun -replace -i             # Open application launcher

# # Workspaces
# bind = $mainMod, 1, workspace, 1  # Open workspace 1
# bind = $mainMod, 2, workspace, 2  # Open workspace 2
# bind = $mainMod, 3, workspace, 3  # Open workspace 3
# bind = $mainMod, 4, workspace, 4  # Open workspace 4
# bind = $mainMod, 5, workspace, 5  # Open workspace 5
# bind = $mainMod, 6, workspace, 6  # Open workspace 6
# bind = $mainMod, 7, workspace, 7  # Open workspace 7
# bind = $mainMod, 8, workspace, 8  # Open workspace 8
# bind = $mainMod, 9, workspace, 9  # Open workspace 9
# bind = $mainMod, 0, workspace, 10 # Open workspace 10

# bind = $mainMod SHIFT, 1, movetoworkspace, 1  # Move active window to workspace 1
# bind = $mainMod SHIFT, 2, movetoworkspace, 2  # Move active window to workspace 2
# bind = $mainMod SHIFT, 3, movetoworkspace, 3  # Move active window to workspace 3
# bind = $mainMod SHIFT, 4, movetoworkspace, 4  # Move active window to workspace 4
# bind = $mainMod SHIFT, 5, movetoworkspace, 5  # Move active window to workspace 5
# bind = $mainMod SHIFT, 6, movetoworkspace, 6  # Move active window to workspace 6
# bind = $mainMod SHIFT, 7, movetoworkspace, 7  # Move active window to workspace 7
# bind = $mainMod SHIFT, 8, movetoworkspace, 8  # Move active window to workspace 8
# bind = $mainMod SHIFT, 9, movetoworkspace, 9  # Move active window to workspace 9
# bind = $mainMod SHIFT, 0, movetoworkspace, 10 # Move active window to workspace 10

# bind = $mainMod, Tab, workspace, m+1       # Open next workspace
# bind = $mainMod SHIFT, Tab, workspace, m-1 # Open previous workspace

# bind = $mainMod CTRL, 1, exec, $HYPRSCRIPTS/moveTo.sh 1  # Move all windows to workspace 1
# bind = $mainMod CTRL, 2, exec, $HYPRSCRIPTS/moveTo.sh 2  # Move all windows to workspace 2
# bind = $mainMod CTRL, 3, exec, $HYPRSCRIPTS/moveTo.sh 3  # Move all windows to workspace 3
# bind = $mainMod CTRL, 4, exec, $HYPRSCRIPTS/moveTo.sh 4  # Move all windows to workspace 4
# bind = $mainMod CTRL, 5, exec, $HYPRSCRIPTS/moveTo.sh 5  # Move all windows to workspace 5
# bind = $mainMod CTRL, 6, exec, $HYPRSCRIPTS/moveTo.sh 6  # Move all windows to workspace 6
# bind = $mainMod CTRL, 7, exec, $HYPRSCRIPTS/moveTo.sh 7  # Move all windows to workspace 7
# bind = $mainMod CTRL, 8, exec, $HYPRSCRIPTS/moveTo.sh 8  # Move all windows to workspace 8
# bind = $mainMod CTRL, 9, exec, $HYPRSCRIPTS/moveTo.sh 9  # Move all windows to workspace 9
# bind = $mainMod CTRL, 0, exec, $HYPRSCRIPTS/moveTo.sh 10 # Move all windows to workspace 10

# bind = $mainMod, mouse_down, workspace, e+1  # Open next workspace
# bind = $mainMod, mouse_up, workspace, e-1    # Open previous workspace
# # bind = $mainMod CTRL, down, workspace, empty # Open the next empty workspace # DEL: . DELETE LINES LATER

# bind = $mainMod, M, workspace, empty # FIX: . Check and test this. remove comments later
# bind = $mainMod, $vimRight, workspace, r+1
# bind = $mainMod, $vimLeft, workspace, r-1


# # Move focused window to a relative workspace. vim binding
# bind = ALT+ SHIFT, $vimRight, movetoworkspace, r+1
# bind = ALT+ SHIFT, $vimLeft, movetoworkspace, r-1

#  # FIX: . Check and test this. remove comments later
# # Move focused window to (n) workspace silently
# bind = ALT+ SHIFT, 1, movetoworkspacesilent, 1
# bind = ALT+ SHIFT, 2, movetoworkspacesilent, 2
# bind = ALT+ SHIFT, 3, movetoworkspacesilent, 3
# bind = ALT+ SHIFT, 4, movetoworkspacesilent, 4
# bind = ALT+ SHIFT, 5, movetoworkspacesilent, 5
# bind = ALT+ SHIFT, 6, movetoworkspacesilent, 6
# bind = ALT+ SHIFT, 7, movetoworkspacesilent, 7
# bind = ALT+ SHIFT, 8, movetoworkspacesilent, 8
# bind = ALT+ SHIFT, 9, movetoworkspacesilent, 9
# bind = ALT+ SHIFT, 0, movetoworkspacesilent, 10

#  # DEL: . DELETE LINES LATER. ml4w is beter
# # bind = $mainMod, Return, fullscreen, # toggle the window between focus and fullscreen # FIX: .  # DEL: . DELETE LINES LATER

#  # FIX: . Check and test this. remove comments later
# # Move/Change window focus. vim binding
# bind = ALT, $vimRight, movefocus, r
# bind = ALT, $vimLeft, movefocus, l
# bind = ALT, $vimUp, movefocus, u
# bind = ALT, $vimDown, movefocus, d

#  # FIX: . Check and test this. remove comments later
# # movewindow = ( m, s, c ) + ( h j k l )
# bind = $mainMod+ SHIFT + CTRL, $vimLeft, movewindow, l
# bind = $mainMod+ SHIFT + CTRL, $vimRight, movewindow, r
# bind = $mainMod+ SHIFT + CTRL, $vimUp, movewindow, u
# bind = $mainMod+ SHIFT + CTRL, $vimDown, movewindow, d

#  # FIX: . Check and test this. remove comments later
# $resizeAmount = 50
# binde = $mainMod + ALT + SHIFT, $vimRight, resizeactive, $resizeAmount 0
# binde = $mainMod + ALT + SHIFT, $vimLeft, resizeactive, -$resizeAmount 0
# binde = $mainMod + ALT + SHIFT, $vimUp, resizeactive, 0 -$resizeAmount
# binde = $mainMod + ALT + SHIFT, $vimDown, resizeactive, 0 $resizeAmount 

# # Passthrough SUPER KEY to Virtual Machine
# # bind = $mainMod, P, submap, passthru # Passthrough SUPER key to virtual machine
# # submap = passthru
# # bind = SUPER, Escape, submap, reset # Get SUPER key back from virtual machine
# # submap = reset

# # Fn keys
# bind = , XF86MonBrightnessUp, exec, brightnessctl -q s +10%                                                                                                  # Increase brightness by 10%
# bind = , XF86MonBrightnessDown, exec, brightnessctl -q s 10%-                                                                                                # Reduce brightness by 10%
# bind = , XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +5%                                                                                # Increase volume by 5%
# bind = , XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -5%                                                                                # Reduce volume by 5%
# bind = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle                                                                                     # Toggle mute
# bind = , XF86AudioPlay, exec, playerctl play-pause                                                                                                           # Audio play pause
# bind = , XF86AudioPause, exec, playerctl pause                                                                                                               # Audio pause
# bind = , XF86AudioNext, exec, playerctl next                                                                                                                 # Audio next
# bind = , XF86AudioPrev, exec, playerctl previous                                                                                                             # Audio previous
# bind = , XF86AudioMicMute, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle                                                                               # Toggle microphone
# bind = , XF86Calculator, exec, ~/.config/ml4w/settings/calculator.sh                                                                                         # Open calculator
# bind = , XF86Lock, exec, hyprlock                                                                                                                            # Open screenlock
# bind = , XF86Tools, exec, $(cat ~/.config/ml4w/settings/terminal.sh) --class dotfiles-floating -e ~/.config/ml4w/apps/ML4W_Dotfiles_Settings-x86_64.AppImage # Open ML4W Dotfiles Settings app

# bind = , code:238, exec, brightnessctl -d smc::kbd_backlight s +10
# bind = , code:237, exec, brightnessctl -d smc::kbd_backlight s 10-


 # FIX: . update this later. but mostly change
# bind = $mainMod, T, togglefloating                                                          # Toggle active windows into floating mode


# FIX: update this.

# keybindings notes
# NOTE:
# H J K L ARE ONLY FOR MOVEMENT FOR EVERY KEY COMBINATION. EXCEPT FOR CTRL + J K.
# `SUPER` OR AND `ALT` FOR HYRPLAND MOVEMENT. for most used ones just use ALT, else use ALT- SHIFT.
# `CTRL` IS FOR INSIDE APP BINDING. SUCH COPY AND OTHERS. 
# ALT and J / K is reserved for nvim.

# FIX: update this.
# NOTE: list of all of the keybindings for certain movement. this is usefull to make sure no keymaps is conflicting with vim, hyprland, and other gui apps.
# gui apps'.
# ctrl-shift-l => move tabs to the left like ctrl+tab. this is done by xremap. and it makes the ctrl alt h or j to be unusable.
# ctrl-shift-h => move tabs to the right like ctrl+shift+tab. this is done by xremap. and it makes the ctrl alt h or j to be unusable.
# ctrl-l => is used alot in browser.
# ctlr-l / l / h / j => is used alot in vim for moving around buffer level.

# FIX: update this
# NOTE: 
# hyperland's.
# $mainMod / super / win + h j k l to move to apps inside workspace.
# alt+ h or l to move to the left or right workspace.
# alt+shift+ h or l to move app to the left or right workspace silently.
# alt+shift+(n) to move app to (n) workspace silently.


# FIX: change meta to super. as meta is alt??

# FIX: put all binds here with their name to list them all.
#
#
# FIX: name all of the binds. with less mod keys to be up here.
#
# current hyprland $mainMod = Super # super / meta / windows key
#
# ------------------------------------------- meta + other keys -------------------------------------------
#
# workspace 1-10  NOTE: ( meta + 1 - 0 ).
#
# launch apps  NOTE: ( meta + E / C / B / N / T / O ).
#
# close app  NOTE: ( meta + Q ).
#
# worspace movement  NOTE: ( meta + H / L ).
#
# -------------------------------------- meta + shift + other keys ----------------------------------------
#
#
# FIX: change this to alt only
#
# app movement  NOTE: ( meta + shift + H / J / K / L ).
#
# # FIX: alt + j / k nvim move line of code?
#
# ------------------------------------------- alt + other keys --------------------------------------------
#
# movefocus app  NOTE: ( alt + h / j / k / l ).
#
# launch rofi  NOTE: ( alt + space ).
#
# launch window or app switcher  NOTE: ( alt + tab ).
#
# --------------------------------------- alt + shift + other keys ----------------------------------------
#
# launch file explorer  NOTE: ( alt + shift + e ).
#
# ------------------------------------ meta + alt + shift + other keys ------------------------------------
#
# resize active window app  NOTE: ( meta + alt + shift + H / J / K / L ).
#
# ----------------------------------- meta + ctrl + shift + other keys ------------------------------------
#
# movewindow or app NOTE: ( meta + ctrl + shift + h / j / k / l ).
#
# --------------------------------- meta + alt + ctrl + shift + other keys --------------------------------
#
## FIX: add nvim keybdingins here? like the new alt j k to ctrl j and k?
#
#
