# █░█ █▀ █▀▀ █▀█   █▀█ █▀█ █▀▀ █▀▀ █▀
# █▄█ ▄█ ██▄ █▀▄   █▀▀ █▀▄ ██▄ █▀░ ▄█

# Set your personal hyprland configuration here
# For a sample file, please refer to https://github.com/prasanthrangan/hyprdots/blob/main/Configs/.config/hypr/userprefs.t2

# █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█
# keybindings. create a its own file and source here.

# FIX: update this.
# NOTE:
# H J K L ARE ONLY FOR MOVEMENT FOR EVERY KEY COMBINATION. EXCEPT FOR CTRL + J K.
# `SUPER` OR AND `ALT` FOR HYRPLAND MOVEMENT. for most used ones just use ALT, else use ALT- SHIFT.
# `CTRL` IS FOR INSIDE APP BINDING. SUCH COPY AND OTHERS. 
# ALT and J / K is reserved for nvim.

# FIX: update this.
# NOTE: list of all of the keybindings for certain movement. this is usefull to make sure no keymaps is conflicting with vim, hyprland, and other gui apps.
# gui apps'.
# ctrl-shift-l => move tabs to the left like ctrl+tab. this is done by xremap. and it makes the ctrl alt h or j to be unusable.
# ctrl-shift-h => move tabs to the right like ctrl+shift+tab. this is done by xremap. and it makes the ctrl alt h or j to be unusable.
# ctrl-l => is used alot in browser.
# ctlr-l / l / h / j => is used alot in vim for moving around buffer level.

# FIX: update this
# NOTE: 
# hyperland's.
# $mainMod / super / win + h j k l to move to apps inside workspace.
# alt+ h or l to move to the left or right workspace.
# alt+shift+ h or l to move app to the left or right workspace silently.
# alt+shift+(n) to move app to (n) workspace silently.


# FIX: change meta to super. as meta is alt??

# FIX: put all binds here with their name to list them all.
#
#
# FIX: name all of the binds. with less mod keys to be up here.
#
# current hyprland $mainMod = Super # super / meta / windows key
#
# ------------------------------------------- meta + other keys -------------------------------------------
#
# workspace 1-10  NOTE: ( meta + 1 - 0 ).
#
# launch apps  NOTE: ( meta + E / C / B / N / T / O ).
#
# close app  NOTE: ( meta + Q ).
#
# worspace movement  NOTE: ( meta + H / L ).
#
# -------------------------------------- meta + shift + other keys ----------------------------------------
#
#
# FIX: change this to alt only
#
# app movement  NOTE: ( meta + shift + H / J / K / L ).
#
# # FIX: alt + j / k nvim move line of code?
#
# ------------------------------------------- alt + other keys --------------------------------------------
#
# movefocus app  NOTE: ( alt + h / j / k / l ).
#
# launch rofi  NOTE: ( alt + space ).
#
# launch window or app switcher  NOTE: ( alt + tab ).
#
# --------------------------------------- alt + shift + other keys ----------------------------------------
#
# launch file explorer  NOTE: ( alt + shift + e ).
#
# ------------------------------------ meta + alt + shift + other keys ------------------------------------
#
# resize active window app  NOTE: ( meta + alt + shift + H / J / K / L ).
#
# ----------------------------------- meta + ctrl + shift + other keys ------------------------------------
#
# movewindow or app NOTE: ( meta + ctrl + shift + h / j / k / l ).
#
# --------------------------------- meta + alt + ctrl + shift + other keys --------------------------------
#
## FIX: add nvim keybdingins here? like the new alt j k to ctrl j and k?
#
#

# Assign apps
$term = kitty
# $term = wezterm
$editor = code
$file = dolphin
$browser = firefox # google-chrome-stable
$noteTaker = obsidian

# vim variables
$vimRight = L
$vimLeft = H
$vimUp = K
$vimDown = J

# TODO: create some kind of list or var that has the combination.
# bind = ALT, Q, exec, $scrPath/dontkillsteam.sh # close focused window
# example: $alt_q or # alt_q = kill app.

# bind = ALT+ SHIFT, Q, killactive # FIX: 

# FIX: create some kind of notes later.
# NOTE: important notes for my custom keybindings for os level to app level keybindings rules.
# the mod keys positions will be like below:
# A S D F / alt meta shift ctrl (left side home row mod keys)
# J K L : / ctrl shift meta alt (right side home row mod keys)
#
# m = meta
# s = shift
# c = ctrl
# a = alt
#
# meta = all os level / hyprland shortcuts. ex. workspaces, apps, launcher. if meta is pressed, it must be for hyprland.
# shift = give alternatives to other shortcuts. ex. meta and shift for other less use hyrpland shortcuts like movewindow.
# alt = is the second choice after meta if the important shortcuts are not available with meta / shift / other keys. preffered to be used with meta if it for hyprland, but also can be used alone incase there are other important hyprland shortcuts
# ctrl = app level shortcuts. ex. nvim, wezterm, etc.

# MARKED: check and unbind and change.
# # FIX: 
# # Window/Session actions
# bind = $mainMod, Q, exec, $scrPath/dontkillsteam.sh # close focused window
# bind = Alt, F4, exec, $scrPath/dontkillsteam.sh # close focused window
# bind = $mainMod, Delete, exit, # kill hyprland session
# bind = $mainMod, W, togglefloating, # toggle the window between focus and float
# bind = $mainMod, G, togglegroup, # toggle the window between focus and group
# bind = Alt, Return, fullscreen, # toggle the window between focus and fullscreen
# bind = $mainMod, L, exec, swaylock # launch lock screen
# bind = $mainMod+Shift, F, exec, $scrPath/windowpin.sh # toggle pin on focused window
# bind = $mainMod, Backspace, exec, $scrPath/logoutlaunch.sh # launch logout menu
# bind = Ctrl+Alt, W, exec, killall waybar || waybar # toggle waybar

# NOTE: unbind should be the tops most
unbind = $mainMod, Q # unbind closed focused window
unbind = $mainMod, L # unbind lock screen. it will be used by movefocus below.
unbind = $mainMod, A # unbind rofi launcher

# unbind before it has conflicst with other binding.
unbind = $mainMod, K
unbind = $mainMod, J

unbind = $mainMod, A # unbind hyprdots rofi app swithcer.
unbind = $mainMod, Tab, # unbind movefocus. this will be used to launch rofi app switcher.

# FIX: check this. remove T here?
unbind = $mainMod, T # unbind hyprdots launch terminal emulator
unbind = $mainMod, E # unbind hyprdots launch file manager
unbind = $mainMod, C # unbind hyprdots launch text editor
unbind = $mainMod, F # unbind hyprdots launch web browser

# bind Switch workspaces
# # FIX: already binded, let it be. make sure it is commented out. 
# update the comment to be better.
# let it be as a way to remember the keybindings. or create a comment  like this;?
# meta + 1 to 9 + 0 = workspace 1-10 ???
#
# bind = $mainMod, 1, workspace, 1
# bind = $mainMod, 2, workspace, 2
# bind = $mainMod, 3, workspace, 3
# bind = $mainMod, 4, workspace, 4
# bind = $mainMod, 5, workspace, 5
# bind = $mainMod, 6, workspace, 6
# bind = $mainMod, 7, workspace, 7
# bind = $mainMod, 8, workspace, 8
# bind = $mainMod, 9, workspace, 9
# bind = $mainMod, 0, workspace, 10

# unbind = $mainMod+Ctrl, Down, workspace, empty # FIX: disabling this causes vim to become smaller in terminal. maybe because of wezterm keybinding?
# # FIX: unbind is important to remove conflicts or unused keybindings.
unbind = $mainMod + Ctrl+ ALT, Right, movetoworkspace, r+1
unbind = $mainMod + Ctrl+ ALT, Left, movetoworkspace, r-1
unbind = $mainMod + Ctrl, Right, workspace, r+1
unbind = $mainMod + Ctrl, Left, workspace, r-1

# FIX:
# Move focused window around the current workspace
unbind = $mainMod+ SHIFT+ Ctrl, Left, movewindow, l
unbind = $mainMod+ SHIFT+ Ctrl, Right, movewindow, r
unbind = $mainMod+ SHIFT+ Ctrl, Up, movewindow, u
unbind = $mainMod+ SHIFT+ Ctrl, Down, movewindow, d

# FIX: check this.
# Move focused window to a workspace silently
unbind = $mainMod+ALT, 1, movetoworkspacesilent, 1
unbind = $mainMod+ALT, 2, movetoworkspacesilent, 2
unbind = $mainMod+ALT, 3, movetoworkspacesilent, 3
unbind = $mainMod+ALT, 4, movetoworkspacesilent, 4
unbind = $mainMod+ALT, 5, movetoworkspacesilent, 5
unbind = $mainMod+ALT, 6, movetoworkspacesilent, 6
unbind = $mainMod+ALT, 7, movetoworkspacesilent, 7
unbind = $mainMod+ALT, 8, movetoworkspacesilent, 8
unbind = $mainMod+ALT, 9, movetoworkspacesilent, 9
unbind = $mainMod+ALT, 0, movetoworkspacesilent, 10

# FIX: change this.
# note this.
bind = $mainMod, Q, exec, $scrPath/dontkillsteam.sh # close focused window
# # FIX: old. no conflict
# bind = ALT, Q, exec, $scrPath/dontkillsteam.sh # close focused window

bind = ALT, Space, exec, pkill -x rofi || $scrPath/rofilaunch.sh d # launch application launcher

# FIX: change this. make sure to change window movement to use main mod and shift.
# Switch workspaces to a relative workspace. vim binding. still retain the hyprdots binding with arrow keys.
bind = $mainMod, $vimRight, workspace, r+1
bind = $mainMod, $vimLeft, workspace, r-1
# FIX: old.
# bind = ALT, $vimRight, workspace, r+1 # FIX: 
# bind = ALT, $vimLeft, workspace, r-1

# Move to the first empty workspace. vim binding.
# MARKED: note this.
bind = $mainMod, M, workspace, empty  # FIX: 
# FIX: find the move window to empty workspace.

# Move focused window to a relative workspace. vim binding
bind = ALT+ SHIFT, $vimRight, movetoworkspace, r+1
bind = ALT+ SHIFT, $vimLeft, movetoworkspace, r-1

# Move focused window to (n) workspace silently
bind = ALT+ SHIFT, 1, movetoworkspacesilent, 1
bind = ALT+ SHIFT, 2, movetoworkspacesilent, 2
bind = ALT+ SHIFT, 3, movetoworkspacesilent, 3
bind = ALT+ SHIFT, 4, movetoworkspacesilent, 4
bind = ALT+ SHIFT, 5, movetoworkspacesilent, 5
bind = ALT+ SHIFT, 6, movetoworkspacesilent, 6
bind = ALT+ SHIFT, 7, movetoworkspacesilent, 7
bind = ALT+ SHIFT, 8, movetoworkspacesilent, 8
bind = ALT+ SHIFT, 9, movetoworkspacesilent, 9
bind = ALT+ SHIFT, 0, movetoworkspacesilent, 10

# FIX: use alt? or mainmod?
# take notes above.
unbind = Alt, Return, fullscreen, # toggle the window between focus and fullscreen
bind = $mainMod, Return, fullscreen, # toggle the window between focus and fullscreen

# FIX: chang ethis again. alt and hyhprnd motion but vim has the same?
# change vim for linux do meta and j k
# FIX:  movefocus app. done
# Move/Change window focus. vim binding
bind = ALT, $vimRight, movefocus, r
bind = ALT, $vimLeft, movefocus, l
bind = ALT, $vimUp, movefocus, u
bind = ALT, $vimDown, movefocus, d
 # FIX: old cones.
# bind = $mainMod, $vimRight, movefocus, r
# bind = $mainMod, $vimLeft, movefocus, l
# bind = $mainMod, $vimUp, movefocus, u
# bind = $mainMod, $vimDown, movefocus, d

# # FIX: : check this. done
# FIX: new
# movewindow = ( m, s, c ) + ( h j k l )
bind = $mainMod+ SHIFT + CTRL, $vimLeft, movewindow, l
bind = $mainMod+ SHIFT + CTRL, $vimRight, movewindow, r
bind = $mainMod+ SHIFT + CTRL, $vimUp, movewindow, u
bind = $mainMod+ SHIFT + CTRL, $vimDown, movewindow, d

# Rofi menus
# # FIX: note this.
bind = ALT, Tab, exec, pkill -x rofi || $scrPath/rofilaunch.sh w # launch window switcher
bind = ALT+ SHIFT, E, exec, pkill -x rofi || $scrPath/rofilaunch.sh f # launch file explorer

# # Application shortcuts
# FIX: add this above. done.
bind = $mainMod, T, exec, $term # launch terminal emulator 
bind = $mainMod, O, exec, $term -e bash -c 'echo "Type the argument for ont:"; read -e -p "ont " input; ont "\"$input\""; exec bash' # launch terminal and run bash command for ont

# FIX: check duplicates. there is no duplicates.
# then name it.
# bind = ALT+ SHIFT, T, exec, $term -e "connect unix" # launch terminal emulator
# bind = ALT, E, exec, $file # launch file manager
# bind = ALT, C, exec, $editor # launch text editor
# bind = ALT, B, exec, $browser # launch web browser
# bind = ALT, N, exec, $noteTaker # launch notes
# bind = ALT, A, exec, $noteTaker; $browser # launch notes
# # FIX: new ones
bind = $mainMod, E, exec, $file # launch file manager
bind = $mainMod, C, exec, $editor # launch text editor
bind = $mainMod, B, exec, $browser # launch web browser
bind = $mainMod, N, exec, $noteTaker # launch notes. # NOTE: mainMod + N by will open terminal with hyprconfig directory.

# bind = Ctrl+ SHIFT, Escape, exec, $scrPath/sysmonlaunch.sh # launch system monitor (htop/btop or fallback to top)

# FIX: change this.
# MARKED:  take note.
# # FIX: change to alt + meta + t
# check again.
bind = ALT+Ctrl, S, togglesplit # Toggle focused window split
# FIX: old
# bind = ALT+Ctrl, S, togglesplit # Toggle focused window split

# FIX:  done.
# unbind movefocus.
unbind = $mainMod, Left, movefocus, l
unbind = $mainMod, Right, movefocus, r
unbind = $mainMod, Up, movefocus, u
unbind = $mainMod, Down, movefocus, d

# FIX: change this to use + alt?
# update the comment to be better.
# # Resize windows. vim binding
# MARKED: 
$resizeAmount = 50
binde = $mainMod + ALT + SHIFT, $vimRight, resizeactive, $resizeAmount 0
binde = $mainMod + ALT + SHIFT, $vimLeft, resizeactive, -$resizeAmount 0
binde = $mainMod + ALT + SHIFT, $vimUp, resizeactive, 0 -$resizeAmount
binde = $mainMod + ALT + SHIFT, $vimDown, resizeactive, 0 $resizeAmount 
 # FIX: old ones.
# binde = $mainMod+ SHIFT, $vimRight, resizeactive, 30 0
# binde = $mainMod+ SHIFT, $vimLeft, resizeactive, -30 0
# binde = $mainMod+ SHIFT, $vimUp, resizeactive, 0 -30
# binde = $mainMod+ SHIFT, $vimDown, resizeactive, 0 30

# FIX: change alt to mod. DONE.
# Switch workspaces
# bind = ALT, 1, workspace, 1 # FIX: 
# bind = ALT, 2, workspace, 2
# bind = ALT, 3, workspace, 3
# bind = ALT, 4, workspace, 4
# bind = ALT, 5, workspace, 5
# bind = ALT, 6, workspace, 6
# bind = ALT, 7, workspace, 7
# bind = ALT, 8, workspace, 8
# bind = ALT, 9, workspace, 9
# bind = ALT, 0, workspace, 10

bind = $mainMod+ALT, L, exec, swaylock # launch lock screen

# █░█░█ █ █▄░█ █▀▄ █▀█ █░█░█   █▀█ █░█ █░░ █▀▀ █▀
# ▀▄▀▄▀ █ █░▀█ █▄▀ █▄█ ▀▄▀▄▀   █▀▄ █▄█ █▄▄ ██▄ ▄█

# See https://wiki.hyprland.org/Configuring/Window-Rules/
# FIX: EXPERIMENTAL. source it with a single file for modularity

# transpacerncy. extending windowsrules.conf
# run this command `hyprctl clients` to find the class of the target application
windowrulev2 = opacity 0.80 0.80,class:^(obsidian)$
windowrulev2 = opacity 0.90 0.90,class:^(neovide)$
windowrulev2 = opacity 0.90 0.90,class:^(Google-chrome)$
windowrulev2 = opacity 0.80 0.80,class:^(org.gnome.Calculator)$
windowrulev2 = opacity 0.80 0.80,class:^(com.usebottles.bottles)$

# windowrule = workspace 1, class:firefox
# windowrule = focus, class:firefox

# NOTE: makes certains apps to be in a specific workspace.
# wezterm will have a terminal session for doing most of the work and light editing. it will have a lof of instances open.
# neovide will be launched from wezterm to focus on editing the main work. it also has session built in by lazyvim to resume work. have enabled swap file to combat crashes and data loss.
# obsidian is the least used app as i will be using wezterm lazyvim's plugin obsidian.nvim to edit notes.
# windowrule = workspace 1, firefox
# windowrule = workspace 2, wezterm
# windowrule = workspace 2, kitty
# windowrule = workspace 3, neovide
# windowrule = workspace 4, obsidian

# latest hyprland wants this
windowrulev2 = workspace 1, class:^(firefox)$
windowrulev2 = workspace 2, class:^(wezterm)$
windowrulev2 = workspace 2, class:^(kitty)$
windowrulev2 = workspace 3, class:^(neovide)$
windowrulev2 = workspace 4, class:^(obsidian)$

exec-once = $noteTaker
exec-once = $browser
exec-once = $term

# overwrite to not make the active and inactive_border to have dimming / gradient color effect which is annoying.
general {
    col.active_border = rgba(ADD8E6ff)  # Light blue active border
    col.inactive_border = rgba(505050ff)  # Dark gray inactive border
}
group {
    col.border_active = rgba(ADD8E6ff) rgba(87CEFAff) 45deg  # Light blue gradient
    col.border_inactive = rgba(505050cc)  # Dark gray with transparency for inactive border
    col.border_locked_active = rgba(ADD8E6ff) rgba(B0E0E6ff) 45deg  # Light blue gradient for locked active
    col.border_locked_inactive = rgba(505050cc)  # Dark gray with transparency for locked inactive border
}

misc {
  # ex. go to browser when an app needs to open a link. this shuld be on by default.
  focus_on_activate = true
}

# # FIX: this is old config. remove later after all are done.
# # █░█ █▀ █▀▀ █▀█   █▀█ █▀█ █▀▀ █▀▀ █▀
# # █▄█ ▄█ ██▄ █▀▄   █▀▀ █▀▄ ██▄ █▀░ ▄█

# # Set your personal hyprland configuration here
# # For a sample file, please refer to https://github.com/prasanthrangan/hyprdots/blob/main/Configs/.config/hypr/userprefs.t2


# # █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# # █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█
# # keybindings. create a its own file and source here.

# # NOTE:
# # H J K L ARE ONLY FOR MOVEMENT FOR EVERY KEY COMBINATION. EXCEPT FOR CTRL + J K.
# # `SUPER` OR AND `ALT` FOR HYRPLAND MOVEMENT. for most used ones just use ALT, else use ALT- SHIFT.
# # `CTRL` IS FOR INSIDE APP BINDING. SUCH COPY AND OTHERS. 
# # ALT and J / K is reserved for nvim.

# # NOTE: list of all of the keybindings for certain movement. this is usefull to make sure no keymaps is conflicting with vim, hyprland, and other gui apps.
# # gui apps'.
# # ctrl-shift-l => move tabs to the left like ctrl+tab. this is done by xremap. and it makes the ctrl alt h or j to be unusable.
# # ctrl-shift-h => move tabs to the right like ctrl+shift+tab. this is done by xremap. and it makes the ctrl alt h or j to be unusable.
# # ctrl-l => is used alot in browser.
# # ctlr-l / l / h / j => is used alot in vim for moving around buffer level.

# # NOTE: 
# # hyperland's.
# # $mainMod / super / win + h j k l to move to apps inside workspace.
# # alt+ h or l to move to the left or right workspace.
# # alt+shift+ h or l to move app to the left or right workspace silently.
# # alt+shift+(n) to move app to (n) workspace silently.

# # Assign apps
# $term = wezterm # kitty
# $editor = code
# $file = dolphin
# $browser = firefox # google-chrome-stable
# $noteTaker = obsidian

# # vim variables
# $vimRight = L
# $vimLeft = H
# $vimUp = K
# $vimDown = J

# # NOTE: unbind should be the tops most
# unbind = $mainMod, Q # unbind closed focused window
# unbind = $mainMod, L # unbind lock screen. it will be used by movefocus below.
# unbind = $mainMod, A # unbind rofi launcher

# # unbind before it has conflicst with other binding.
# unbind = $mainMod, K
# unbind = $mainMod, J

# unbind = $mainMod, A # unbind hyprdots rofi app swithcer.
# unbind = $mainMod, Tab, # unbind movefocus. this will be used to launch rofi app switcher.

# unbind = $mainMod, T # unbind hyprdots launch terminal emulator
# unbind = $mainMod, E # unbind hyprdots launch file manager
# unbind = $mainMod, C # unbind hyprdots launch text editor
# unbind = $mainMod, F # unbind hyprdots launch web browser

# # unbind Switch workspaces
# unbind = $mainMod, 1, workspace, 1
# unbind = $mainMod, 2, workspace, 2
# unbind = $mainMod, 3, workspace, 3
# unbind = $mainMod, 4, workspace, 4
# unbind = $mainMod, 5, workspace, 5
# unbind = $mainMod, 6, workspace, 6
# unbind = $mainMod, 7, workspace, 7
# unbind = $mainMod, 8, workspace, 8
# unbind = $mainMod, 9, workspace, 9
# unbind = $mainMod, 0, workspace, 10

# # unbind = $mainMod+Ctrl, Down, workspace, empty # FIX: disabling this causes vim to become smaller in terminal. maybe because of wezterm keybinding?
# unbind = $mainMod+Ctrl+ALT, Right, movetoworkspace, r+1
# unbind = $mainMod+Ctrl+ALT, Left, movetoworkspace, r-1
# unbind = $mainMod+Ctrl, Right, workspace, r+1
# unbind = $mainMod+Ctrl, Left, workspace, r-1

# # Move focused window to a workspace silently
# unbind = $mainMod+ALT, 1, movetoworkspacesilent, 1
# unbind = $mainMod+ALT, 2, movetoworkspacesilent, 2
# unbind = $mainMod+ALT, 3, movetoworkspacesilent, 3
# unbind = $mainMod+ALT, 4, movetoworkspacesilent, 4
# unbind = $mainMod+ALT, 5, movetoworkspacesilent, 5
# unbind = $mainMod+ALT, 6, movetoworkspacesilent, 6
# unbind = $mainMod+ALT, 7, movetoworkspacesilent, 7
# unbind = $mainMod+ALT, 8, movetoworkspacesilent, 8
# unbind = $mainMod+ALT, 9, movetoworkspacesilent, 9
# unbind = $mainMod+ALT, 0, movetoworkspacesilent, 10

# bind = ALT, Q, exec, $scrPath/dontkillsteam.sh # close focused window
# bind = ALT, Space, exec, pkill -x rofi || $scrPath/rofilaunch.sh d # launch application launcher

# # Switch workspaces to a relative workspace. vim binding. still retain the hyprdots binding with arrow keys.
# bind = ALT, $vimRight, workspace, r+1
# bind = ALT, $vimLeft, workspace, r-1

# # Move to the first empty workspace. vim binding.
# bind = ALT, M, workspace, empty 
# # bind = ALT, $vimDown, workspace, empty # is used by nvim

# # Move focused window to a relative workspace. vim binding
# bind = ALT+ SHIFT, $vimRight, movetoworkspace, r+1
# bind = ALT+ SHIFT, $vimLeft, movetoworkspace, r-1

# # Move focused window to (n) workspace silently
# bind = ALT+ SHIFT, 1, movetoworkspacesilent, 1
# bind = ALT+ SHIFT, 2, movetoworkspacesilent, 2
# bind = ALT+ SHIFT, 3, movetoworkspacesilent, 3
# bind = ALT+ SHIFT, 4, movetoworkspacesilent, 4
# bind = ALT+ SHIFT, 5, movetoworkspacesilent, 5
# bind = ALT+ SHIFT, 6, movetoworkspacesilent, 6
# bind = ALT+ SHIFT, 7, movetoworkspacesilent, 7
# bind = ALT+ SHIFT, 8, movetoworkspacesilent, 8
# bind = ALT+ SHIFT, 9, movetoworkspacesilent, 9
# bind = ALT+ SHIFT, 0, movetoworkspacesilent, 10

# # Move/Change window focus. vim binding
# bind = $mainMod, $vimRight, movefocus, r
# bind = $mainMod, $vimLeft, movefocus, l
# bind = $mainMod, $vimUp, movefocus, u
# bind = $mainMod, $vimDown, movefocus, d

# # # Rofi menus
# bind = ALT, Tab, exec, pkill -x rofi || $scrPath/rofilaunch.sh w # launch window switcher
# bind = ALT+ SHIFT, E, exec, pkill -x rofi || $scrPath/rofilaunch.sh f # launch file explorer

# # # Application shortcuts
# bind = ALT, T, exec, $term # launch terminal emulator 
# bind = ALT, O, exec, $term -e bash -c 'echo "Type the argument for ont:"; read -e -p "ont " input; ont "\"$input\""; exec bash' # launch terminal and run bash command for ont

# # bind = ALT+ SHIFT, T, exec, $term -e "connect unix" # launch terminal emulator
# bind = ALT, E, exec, $file # launch file manager
# bind = ALT, C, exec, $editor # launch text editor
# bind = ALT, B, exec, $browser # launch web browser
# bind = ALT, N, exec, $noteTaker # launch notes
# bind = ALT, A, exec, $noteTaker; $browser # launch notes
# # bind = Ctrl+ SHIFT, Escape, exec, $scrPath/sysmonlaunch.sh # launch system monitor (htop/btop or fallback to top)

# bind = ALT+Ctrl, S, togglesplit # Toggle focused window split

# # # Resize windows. vim binding
# binde = $mainMod+ SHIFT, $vimRight, resizeactive, 30 0
# binde = $mainMod+ SHIFT, $vimLeft, resizeactive, -30 0
# binde = $mainMod+ SHIFT, $vimUp, resizeactive, 0 -30
# binde = $mainMod+ SHIFT, $vimDown, resizeactive, 0 30

# # Switch workspaces
# bind = ALT, 1, workspace, 1
# bind = ALT, 2, workspace, 2
# bind = ALT, 3, workspace, 3
# bind = ALT, 4, workspace, 4
# bind = ALT, 5, workspace, 5
# bind = ALT, 6, workspace, 6
# bind = ALT, 7, workspace, 7
# bind = ALT, 8, workspace, 8
# bind = ALT, 9, workspace, 9
# bind = ALT, 0, workspace, 10

# bind = $mainMod+ALT, L, exec, swaylock # launch lock screen

# # █░█░█ █ █▄░█ █▀▄ █▀█ █░█░█   █▀█ █░█ █░░ █▀▀ █▀
# # ▀▄▀▄▀ █ █░▀█ █▄▀ █▄█ ▀▄▀▄▀   █▀▄ █▄█ █▄▄ ██▄ ▄█

# # See https://wiki.hyprland.org/Configuring/Window-Rules/
# # FIX: EXPERIMENTAL. source it with a single file for modularity

# # transpacerncy. extending windowsrules.conf
# # run this command `hyprctl clients` to find the class of the target application
# windowrulev2 = opacity 0.80 0.80,class:^(obsidian)$
# windowrulev2 = opacity 0.90 0.90,class:^(neovide)$
# windowrulev2 = opacity 0.90 0.90,class:^(Google-chrome)$
# windowrulev2 = opacity 0.80 0.80,class:^(org.gnome.Calculator)$
# windowrulev2 = opacity 0.80 0.80,class:^(com.usebottles.bottles)$

# # windowrule = workspace 1, class:firefox
# # windowrule = focus, class:firefox

# # NOTE: makes certains apps to be in a specific workspace.
# # wezterm will have a terminal session for doing most of the work and light editing. it will have a lot of tabs.
# # neovide will be launched from wezterm to focus on editing the main work. it also has session built in by lazyvim to resume work.
# # obsidian is the least used app as i will be using wezterm lazyvim's plugin obsidian.nvim to edit notes.
# windowrule = workspace 1, firefox
# windowrule = workspace 2, wezterm
# windowrule = workspace 3, neovide
# windowrule = workspace 4, obsidian

# # launch my most used apps on startup. and got to empty workspace.
# exec-once = $noteTaker
# exec-once = $browser
# exec-once = $term
# # exec-once = fish hyprctl dispatch workspace empty # FIX: does not work.

# # TODO: find a way to remove gradient color effect.
# # overwrite to not make the active and inactive_border to have dimming / gradient color effect which is annoying.
# # general {
# #     col.active_border = rgba(EFDAB4ff) 
# #     col.inactive_border = rgba(323031ff) 
# # }
# # group {
# #     col.border_active = rgba(EFDAB4ff) rgba(524329ff) 45deg
# #     col.border_inactive = rgba(323031cc) 
# #     col.border_locked_active = rgba(101011ff) rgba(070708ff) 45deg
# #     col.border_locked_inactive = rgba(FFFFFFcc) 
# # }


# misc {
#   # ex. go to browser when an app needs to open a link.
#   focus_on_activate = true
# }

# # vim:ft=hyprlang
