(defcfg
  log-layer-changes no
  process-unmapped-keys yes
  ;; danger-enable-cmd yes
  ;; concurrent-tab-hold yes
)

(defvar
  ;; tap-timeout is used to make the tap-hol to have key repeat. ex. tap a and a in repeat succession and then hold a will produces a lot of 'a'.
  tap-timeout   200
  hold-timeout  250
  tt $tap-timeout
  ht $hold-timeout
)

(defalias
  nav (tap-hold $tt $ht spc (layer-while-held navigation))

  ;; home row left side. NOTE: alt, meta, shift, ctrl.
  alt_a (tap-hold $tt $ht a lalt)
  met_s (tap-hold $tt $ht s lmet)
  sft_d (tap-hold $tt $ht d lsft)
  ctl_f (tap-hold $tt $ht f lctl)

  ;; NOTE: this makes j, k and l to not have any repetition pressing. 
  ctl_j (tap-hold $tt $ht j rctl)
  sft_k (tap-hold $tt $ht k rsft)
  met_l (tap-hold $tt $ht l rmet) ;; it uses lalt becuase some keyboards has different behavior of lalt and ralt.
  alt_; (tap-hold $tt $ht ; lalt)
  changeLayer (tap-dance $ht (lctl (layer-toggle navigation))) ;; this makes xremap lctrl shift h and l to be a tab 
  esc_ctl (tap-hold $tt $ht esc lctl)

  ;; tab navigation
  tabLeft (multi lctl lsft tab)
  tabRight (multi lctl tab)
)

(defsrc
  esc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft     up
  lctl lmet lalt           spc            ralt rmet rctl    left down right
)

;; NOTE: this is very important. defsrc must include all keys. to avoid delay.
;; ex. 'e' is not registered and 'spc' has an alias of tap-hold. when pressing 'spc' and then 'e'.
;; it will be printed like this 'e '.
;; which is very annoying as it shows massive delay. the outcome should be ' e'.
(deflayer base
  esc
  grv          1      2    3      4    5    6    7      8    9      0      -    =    bspc
  tab          q      w    e      r    t    y    u      i    o      p      [    ]    \    
  @esc_ctl @alt_a @met_s @sft_d @ctl_f g    h  @ctl_j @sft_k @met_l @alt_; '  ret
  lsft         z      x    c      v    b    n    m      ,    .      /    rsft  up
  lctl        lmet   lalt           @nav            ralt rmet rctl    left down right
)

;; TODO: 
;; add end and home keys
;; add delete and backspace keys
(deflayer navigation
  esc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  esc  w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    left down up right  ;    '    ret
  lsft z    x    c    v    b    @tabLeft @tabRight ,    rpt-any    /    rsft     up
  lctl lmet lalt           spc            ralt rmet rctl    left down right
)

;; vim:ft=lisp
